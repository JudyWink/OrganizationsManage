<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.jude.manageBack.mapper.IndeximgsMapper">
  <resultMap id="BaseResultMap" type="org.jude.manageBack.pojo.Indeximgs">
    <id column="indeximgId" jdbcType="INTEGER" property="indeximgid" />
    <result column="indeximgUrl" jdbcType="VARCHAR" property="indeximgurl" />
    <result column="indeximgCreateTime" jdbcType="TIMESTAMP" property="indeximgcreatetime" />
    <result column="indeximgOwnerOrg" jdbcType="INTEGER" property="indeximgownerorg" />
    <result column="indeximgOwner" jdbcType="VARCHAR" property="indeximgowner" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    indeximgId, indeximgUrl, indeximgCreateTime, indeximgOwnerOrg, indeximgOwner
  </sql>
  <select id="selectByExample" parameterType="org.jude.manageBack.pojo.IndeximgsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from indeximgs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from indeximgs
    where indeximgId = #{indeximgid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from indeximgs
    where indeximgId = #{indeximgid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.jude.manageBack.pojo.IndeximgsExample">
    delete from indeximgs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.jude.manageBack.pojo.Indeximgs">
    insert into indeximgs (indeximgId, indeximgUrl, indeximgCreateTime, 
      indeximgOwnerOrg, indeximgOwner)
    values (#{indeximgid,jdbcType=INTEGER}, #{indeximgurl,jdbcType=VARCHAR}, #{indeximgcreatetime,jdbcType=TIMESTAMP}, 
      #{indeximgownerorg,jdbcType=INTEGER}, #{indeximgowner,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.jude.manageBack.pojo.Indeximgs">
    insert into indeximgs
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="indeximgid != null">
        indeximgId,
      </if>
      <if test="indeximgurl != null">
        indeximgUrl,
      </if>
      <if test="indeximgcreatetime != null">
        indeximgCreateTime,
      </if>
      <if test="indeximgownerorg != null">
        indeximgOwnerOrg,
      </if>
      <if test="indeximgowner != null">
        indeximgOwner,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="indeximgid != null">
        #{indeximgid,jdbcType=INTEGER},
      </if>
      <if test="indeximgurl != null">
        #{indeximgurl,jdbcType=VARCHAR},
      </if>
      <if test="indeximgcreatetime != null">
        #{indeximgcreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="indeximgownerorg != null">
        #{indeximgownerorg,jdbcType=INTEGER},
      </if>
      <if test="indeximgowner != null">
        #{indeximgowner,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.jude.manageBack.pojo.IndeximgsExample" resultType="java.lang.Long">
    select count(*) from indeximgs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update indeximgs
    <set>
      <if test="record.indeximgid != null">
        indeximgId = #{record.indeximgid,jdbcType=INTEGER},
      </if>
      <if test="record.indeximgurl != null">
        indeximgUrl = #{record.indeximgurl,jdbcType=VARCHAR},
      </if>
      <if test="record.indeximgcreatetime != null">
        indeximgCreateTime = #{record.indeximgcreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.indeximgownerorg != null">
        indeximgOwnerOrg = #{record.indeximgownerorg,jdbcType=INTEGER},
      </if>
      <if test="record.indeximgowner != null">
        indeximgOwner = #{record.indeximgowner,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update indeximgs
    set indeximgId = #{record.indeximgid,jdbcType=INTEGER},
      indeximgUrl = #{record.indeximgurl,jdbcType=VARCHAR},
      indeximgCreateTime = #{record.indeximgcreatetime,jdbcType=TIMESTAMP},
      indeximgOwnerOrg = #{record.indeximgownerorg,jdbcType=INTEGER},
      indeximgOwner = #{record.indeximgowner,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.jude.manageBack.pojo.Indeximgs">
    update indeximgs
    <set>
      <if test="indeximgurl != null">
        indeximgUrl = #{indeximgurl,jdbcType=VARCHAR},
      </if>
      <if test="indeximgcreatetime != null">
        indeximgCreateTime = #{indeximgcreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="indeximgownerorg != null">
        indeximgOwnerOrg = #{indeximgownerorg,jdbcType=INTEGER},
      </if>
      <if test="indeximgowner != null">
        indeximgOwner = #{indeximgowner,jdbcType=VARCHAR},
      </if>
    </set>
    where indeximgId = #{indeximgid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.jude.manageBack.pojo.Indeximgs">
    update indeximgs
    set indeximgUrl = #{indeximgurl,jdbcType=VARCHAR},
      indeximgCreateTime = #{indeximgcreatetime,jdbcType=TIMESTAMP},
      indeximgOwnerOrg = #{indeximgownerorg,jdbcType=INTEGER},
      indeximgOwner = #{indeximgowner,jdbcType=VARCHAR}
    where indeximgId = #{indeximgid,jdbcType=INTEGER}
  </update>
</mapper>