<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.jude.manageBack.mapper.MessagesBackupsMapper">
  <resultMap id="BaseResultMap" type="org.jude.manageBack.pojo.MessagesBackups">
    <id column="messageId" jdbcType="INTEGER" property="messageid" />
    <result column="messageText" jdbcType="VARCHAR" property="messagetext" />
    <result column="messageTitle" jdbcType="VARCHAR" property="messagetitle" />
    <result column="messageLaunch" jdbcType="INTEGER" property="messagelaunch" />
    <result column="messageReceive" jdbcType="VARCHAR" property="messagereceive" />
    <result column="messageStatus" jdbcType="VARCHAR" property="messagestatus" />
    <result column="messageType" jdbcType="VARCHAR" property="messagetype" />
    <result column="messageCreateTime" jdbcType="TIMESTAMP" property="messagecreatetime" />
    <result column="messageReadTime" jdbcType="TIMESTAMP" property="messagereadtime" />
    <result column="messageLaunchName" jdbcType="VARCHAR" property="messagelaunchname" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    messageId, messageText, messageTitle, messageLaunch, messageReceive, messageStatus, 
    messageType, messageCreateTime, messageReadTime, messageLaunchName
  </sql>
  <select id="selectByExample" parameterType="org.jude.manageBack.pojo.MessagesBackupsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from messages_backups
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from messages_backups
    where messageId = #{messageid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from messages_backups
    where messageId = #{messageid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.jude.manageBack.pojo.MessagesBackupsExample">
    delete from messages_backups
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.jude.manageBack.pojo.MessagesBackups">
    insert into messages_backups (messageId, messageText, messageTitle, 
      messageLaunch, messageReceive, messageStatus, 
      messageType, messageCreateTime, messageReadTime, 
      messageLaunchName)
    values (#{messageid,jdbcType=INTEGER}, #{messagetext,jdbcType=VARCHAR}, #{messagetitle,jdbcType=VARCHAR}, 
      #{messagelaunch,jdbcType=INTEGER}, #{messagereceive,jdbcType=VARCHAR}, #{messagestatus,jdbcType=VARCHAR}, 
      #{messagetype,jdbcType=VARCHAR}, #{messagecreatetime,jdbcType=TIMESTAMP}, #{messagereadtime,jdbcType=TIMESTAMP}, 
      #{messagelaunchname,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.jude.manageBack.pojo.MessagesBackups">
    insert into messages_backups
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="messageid != null">
        messageId,
      </if>
      <if test="messagetext != null">
        messageText,
      </if>
      <if test="messagetitle != null">
        messageTitle,
      </if>
      <if test="messagelaunch != null">
        messageLaunch,
      </if>
      <if test="messagereceive != null">
        messageReceive,
      </if>
      <if test="messagestatus != null">
        messageStatus,
      </if>
      <if test="messagetype != null">
        messageType,
      </if>
      <if test="messagecreatetime != null">
        messageCreateTime,
      </if>
      <if test="messagereadtime != null">
        messageReadTime,
      </if>
      <if test="messagelaunchname != null">
        messageLaunchName,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="messageid != null">
        #{messageid,jdbcType=INTEGER},
      </if>
      <if test="messagetext != null">
        #{messagetext,jdbcType=VARCHAR},
      </if>
      <if test="messagetitle != null">
        #{messagetitle,jdbcType=VARCHAR},
      </if>
      <if test="messagelaunch != null">
        #{messagelaunch,jdbcType=INTEGER},
      </if>
      <if test="messagereceive != null">
        #{messagereceive,jdbcType=VARCHAR},
      </if>
      <if test="messagestatus != null">
        #{messagestatus,jdbcType=VARCHAR},
      </if>
      <if test="messagetype != null">
        #{messagetype,jdbcType=VARCHAR},
      </if>
      <if test="messagecreatetime != null">
        #{messagecreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="messagereadtime != null">
        #{messagereadtime,jdbcType=TIMESTAMP},
      </if>
      <if test="messagelaunchname != null">
        #{messagelaunchname,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.jude.manageBack.pojo.MessagesBackupsExample" resultType="java.lang.Long">
    select count(*) from messages_backups
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update messages_backups
    <set>
      <if test="record.messageid != null">
        messageId = #{record.messageid,jdbcType=INTEGER},
      </if>
      <if test="record.messagetext != null">
        messageText = #{record.messagetext,jdbcType=VARCHAR},
      </if>
      <if test="record.messagetitle != null">
        messageTitle = #{record.messagetitle,jdbcType=VARCHAR},
      </if>
      <if test="record.messagelaunch != null">
        messageLaunch = #{record.messagelaunch,jdbcType=INTEGER},
      </if>
      <if test="record.messagereceive != null">
        messageReceive = #{record.messagereceive,jdbcType=VARCHAR},
      </if>
      <if test="record.messagestatus != null">
        messageStatus = #{record.messagestatus,jdbcType=VARCHAR},
      </if>
      <if test="record.messagetype != null">
        messageType = #{record.messagetype,jdbcType=VARCHAR},
      </if>
      <if test="record.messagecreatetime != null">
        messageCreateTime = #{record.messagecreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.messagereadtime != null">
        messageReadTime = #{record.messagereadtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.messagelaunchname != null">
        messageLaunchName = #{record.messagelaunchname,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update messages_backups
    set messageId = #{record.messageid,jdbcType=INTEGER},
      messageText = #{record.messagetext,jdbcType=VARCHAR},
      messageTitle = #{record.messagetitle,jdbcType=VARCHAR},
      messageLaunch = #{record.messagelaunch,jdbcType=INTEGER},
      messageReceive = #{record.messagereceive,jdbcType=VARCHAR},
      messageStatus = #{record.messagestatus,jdbcType=VARCHAR},
      messageType = #{record.messagetype,jdbcType=VARCHAR},
      messageCreateTime = #{record.messagecreatetime,jdbcType=TIMESTAMP},
      messageReadTime = #{record.messagereadtime,jdbcType=TIMESTAMP},
      messageLaunchName = #{record.messagelaunchname,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.jude.manageBack.pojo.MessagesBackups">
    update messages_backups
    <set>
      <if test="messagetext != null">
        messageText = #{messagetext,jdbcType=VARCHAR},
      </if>
      <if test="messagetitle != null">
        messageTitle = #{messagetitle,jdbcType=VARCHAR},
      </if>
      <if test="messagelaunch != null">
        messageLaunch = #{messagelaunch,jdbcType=INTEGER},
      </if>
      <if test="messagereceive != null">
        messageReceive = #{messagereceive,jdbcType=VARCHAR},
      </if>
      <if test="messagestatus != null">
        messageStatus = #{messagestatus,jdbcType=VARCHAR},
      </if>
      <if test="messagetype != null">
        messageType = #{messagetype,jdbcType=VARCHAR},
      </if>
      <if test="messagecreatetime != null">
        messageCreateTime = #{messagecreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="messagereadtime != null">
        messageReadTime = #{messagereadtime,jdbcType=TIMESTAMP},
      </if>
      <if test="messagelaunchname != null">
        messageLaunchName = #{messagelaunchname,jdbcType=VARCHAR},
      </if>
    </set>
    where messageId = #{messageid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.jude.manageBack.pojo.MessagesBackups">
    update messages_backups
    set messageText = #{messagetext,jdbcType=VARCHAR},
      messageTitle = #{messagetitle,jdbcType=VARCHAR},
      messageLaunch = #{messagelaunch,jdbcType=INTEGER},
      messageReceive = #{messagereceive,jdbcType=VARCHAR},
      messageStatus = #{messagestatus,jdbcType=VARCHAR},
      messageType = #{messagetype,jdbcType=VARCHAR},
      messageCreateTime = #{messagecreatetime,jdbcType=TIMESTAMP},
      messageReadTime = #{messagereadtime,jdbcType=TIMESTAMP},
      messageLaunchName = #{messagelaunchname,jdbcType=VARCHAR}
    where messageId = #{messageid,jdbcType=INTEGER}
  </update>
</mapper>