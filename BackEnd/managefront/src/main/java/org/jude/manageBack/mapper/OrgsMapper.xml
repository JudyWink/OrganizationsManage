<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.jude.manageBack.mapper.OrgsMapper">
  <resultMap id="BaseResultMap" type="org.jude.manageBack.pojo.Orgs">
    <id column="orgId" jdbcType="INTEGER" property="orgid" />
    <result column="orgName" jdbcType="VARCHAR" property="orgname" />
    <result column="orgCreateTime" jdbcType="TIMESTAMP" property="orgcreatetime" />
    <result column="orgLeader" jdbcType="VARCHAR" property="orgleader" />
    <result column="orgType" jdbcType="VARCHAR" property="orgtype" />
    <result column="orgSlogan" jdbcType="VARCHAR" property="orgslogan" />
    <result column="orgIntroduce" jdbcType="VARCHAR" property="orgintroduce" />
    <result column="orgHistory" jdbcType="VARCHAR" property="orghistory" />
    <result column="orgCampus" jdbcType="VARCHAR" property="orgcampus" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    orgId, orgName, orgCreateTime, orgLeader, orgType, orgSlogan, orgIntroduce, orgHistory, 
    orgCampus
  </sql>
  <select id="selectByExample" parameterType="org.jude.manageBack.pojo.OrgsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from orgs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from orgs
    where orgId = #{orgid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from orgs
    where orgId = #{orgid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.jude.manageBack.pojo.OrgsExample">
    delete from orgs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.jude.manageBack.pojo.Orgs">
    insert into orgs (orgId, orgName, orgCreateTime, 
      orgLeader, orgType, orgSlogan, 
      orgIntroduce, orgHistory, orgCampus
      )
    values (#{orgid,jdbcType=INTEGER}, #{orgname,jdbcType=VARCHAR}, #{orgcreatetime,jdbcType=TIMESTAMP}, 
      #{orgleader,jdbcType=VARCHAR}, #{orgtype,jdbcType=VARCHAR}, #{orgslogan,jdbcType=VARCHAR}, 
      #{orgintroduce,jdbcType=VARCHAR}, #{orghistory,jdbcType=VARCHAR}, #{orgcampus,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.jude.manageBack.pojo.Orgs">
    insert into orgs
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orgid != null">
        orgId,
      </if>
      <if test="orgname != null">
        orgName,
      </if>
      <if test="orgcreatetime != null">
        orgCreateTime,
      </if>
      <if test="orgleader != null">
        orgLeader,
      </if>
      <if test="orgtype != null">
        orgType,
      </if>
      <if test="orgslogan != null">
        orgSlogan,
      </if>
      <if test="orgintroduce != null">
        orgIntroduce,
      </if>
      <if test="orghistory != null">
        orgHistory,
      </if>
      <if test="orgcampus != null">
        orgCampus,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orgid != null">
        #{orgid,jdbcType=INTEGER},
      </if>
      <if test="orgname != null">
        #{orgname,jdbcType=VARCHAR},
      </if>
      <if test="orgcreatetime != null">
        #{orgcreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="orgleader != null">
        #{orgleader,jdbcType=VARCHAR},
      </if>
      <if test="orgtype != null">
        #{orgtype,jdbcType=VARCHAR},
      </if>
      <if test="orgslogan != null">
        #{orgslogan,jdbcType=VARCHAR},
      </if>
      <if test="orgintroduce != null">
        #{orgintroduce,jdbcType=VARCHAR},
      </if>
      <if test="orghistory != null">
        #{orghistory,jdbcType=VARCHAR},
      </if>
      <if test="orgcampus != null">
        #{orgcampus,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.jude.manageBack.pojo.OrgsExample" resultType="java.lang.Long">
    select count(*) from orgs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update orgs
    <set>
      <if test="record.orgid != null">
        orgId = #{record.orgid,jdbcType=INTEGER},
      </if>
      <if test="record.orgname != null">
        orgName = #{record.orgname,jdbcType=VARCHAR},
      </if>
      <if test="record.orgcreatetime != null">
        orgCreateTime = #{record.orgcreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orgleader != null">
        orgLeader = #{record.orgleader,jdbcType=VARCHAR},
      </if>
      <if test="record.orgtype != null">
        orgType = #{record.orgtype,jdbcType=VARCHAR},
      </if>
      <if test="record.orgslogan != null">
        orgSlogan = #{record.orgslogan,jdbcType=VARCHAR},
      </if>
      <if test="record.orgintroduce != null">
        orgIntroduce = #{record.orgintroduce,jdbcType=VARCHAR},
      </if>
      <if test="record.orghistory != null">
        orgHistory = #{record.orghistory,jdbcType=VARCHAR},
      </if>
      <if test="record.orgcampus != null">
        orgCampus = #{record.orgcampus,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update orgs
    set orgId = #{record.orgid,jdbcType=INTEGER},
      orgName = #{record.orgname,jdbcType=VARCHAR},
      orgCreateTime = #{record.orgcreatetime,jdbcType=TIMESTAMP},
      orgLeader = #{record.orgleader,jdbcType=VARCHAR},
      orgType = #{record.orgtype,jdbcType=VARCHAR},
      orgSlogan = #{record.orgslogan,jdbcType=VARCHAR},
      orgIntroduce = #{record.orgintroduce,jdbcType=VARCHAR},
      orgHistory = #{record.orghistory,jdbcType=VARCHAR},
      orgCampus = #{record.orgcampus,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.jude.manageBack.pojo.Orgs">
    update orgs
    <set>
      <if test="orgname != null">
        orgName = #{orgname,jdbcType=VARCHAR},
      </if>
      <if test="orgcreatetime != null">
        orgCreateTime = #{orgcreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="orgleader != null">
        orgLeader = #{orgleader,jdbcType=VARCHAR},
      </if>
      <if test="orgtype != null">
        orgType = #{orgtype,jdbcType=VARCHAR},
      </if>
      <if test="orgslogan != null">
        orgSlogan = #{orgslogan,jdbcType=VARCHAR},
      </if>
      <if test="orgintroduce != null">
        orgIntroduce = #{orgintroduce,jdbcType=VARCHAR},
      </if>
      <if test="orghistory != null">
        orgHistory = #{orghistory,jdbcType=VARCHAR},
      </if>
      <if test="orgcampus != null">
        orgCampus = #{orgcampus,jdbcType=VARCHAR},
      </if>
    </set>
    where orgId = #{orgid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.jude.manageBack.pojo.Orgs">
    update orgs
    set orgName = #{orgname,jdbcType=VARCHAR},
      orgCreateTime = #{orgcreatetime,jdbcType=TIMESTAMP},
      orgLeader = #{orgleader,jdbcType=VARCHAR},
      orgType = #{orgtype,jdbcType=VARCHAR},
      orgSlogan = #{orgslogan,jdbcType=VARCHAR},
      orgIntroduce = #{orgintroduce,jdbcType=VARCHAR},
      orgHistory = #{orghistory,jdbcType=VARCHAR},
      orgCampus = #{orgcampus,jdbcType=VARCHAR}
    where orgId = #{orgid,jdbcType=INTEGER}
  </update>
</mapper>